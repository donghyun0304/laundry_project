<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="aug.laundry.dao.orders.OrdersMapper">


    <select id="findByOrdersId" resultType="aug.laundry.dto.OrdersResponseDto">
        SELECT TO_CHAR(TO_NUMBER(TO_CHAR(A.ORDERS_DATE, 'MM'))) || '월 ' || TO_CHAR(A.ORDERS_DATE, 'DD') || '일' || TO_CHAR(A.ORDERS_DATE, '(DY)') AS ORDERS_DATE,
        A.ORDERS_ID,
        TO_CHAR(A.ORDERS_PICKUP_DATE, 'YYYY/MM/DD(DY) HH24') || '시' AS ORDERS_PICKUP_DATE,
        TO_CHAR(A.ORDERS_RETURN_DATE, 'YYYY/MM/DD(DY) HH24') || '시' AS ORDERS_RETURN_DATE,
        A.ORDERS_ADDRESS,
        A.ORDERS_ADDRESS_DETAILS, A.ORDERS_REQUEST, C.COMMON_LAUNDRY_WEIGHT,
        A.MEMBER_ID
        FROM ORDERS A
        INNER JOIN ORDERS_DETAIL B
        ON A.ORDERS_ID = B.ORDERS_ID
        INNER JOIN COMMON_LAUNDRY C
        ON B.ORDERS_DETAIL_ID = C.ORDERS_DETAIL_ID
        WHERE A.ORDERS_ID = #{ordersId}
    </select>

    <select id="findDryCleaningByOrdersId" resultType="Drycleaning">
        SELECT A.DRYCLEANING_CATEGORY, A.DRYCLEANING_POSSIBILITY, A.DRYCLEANING_NOT_REASON
        FROM DRYCLEANING A
        INNER JOIN ORDERS_DETAIL B
            ON A.ORDERS_DETAIL_ID = B.ORDERS_DETAIL_ID
        WHERE B.ORDERS_ID = #{ordersId}
    </select>

    <select id="findRepairByOrdersId" resultType="Repair">
        SELECT A.REPAIR_CATEGORY, A.REPAIR_POSSIBILITY, A.REPAIR_NOT_REASON
        FROM REPAIR A
        INNER JOIN ORDERS_DETAIL B
            ON A.ORDERS_DETAIL_ID = B.ORDERS_DETAIL_ID
        WHERE B.ORDERS_ID = #{ordersId}
    </select>

    <select id="findQuickLaundryByOrdersId" resultType="int">
        SELECT COUNT(*)
        FROM QUICK_LAUNDRY A
        INNER JOIN ORDERS_DETAIL B
        ON A.ORDERS_DETAIL_ID = B.ORDERS_DETAIL_ID
        WHERE B.ORDERS_ID = #{ordersId}
    </select>

    <update id="updateExpectedPriceByOrdersId">
        UPDATE ORDERS
        SET ORDERS_EXPECTED_PRICE = #{expectedPrice}
        WHERE ORDERS_ID = #{ordersId}
    </update>

    <select id="findExpectedPriceByOrdersId" resultType="Long">
        SELECT ORDERS_EXPECTED_PRICE
        FROM ORDERS
        WHERE ORDERS_ID = #{ordersId}
    </select>

    <update id="updateOrdersStatusToCompletePayment">
        UPDATE ORDERS
        SET ORDERS_STATUS = 8
        WHERE ORDERS_ID = #{ordersId}
    </update>

    <update id="updateCouponListStatusToUsedCoupon">
        UPDATE COUPON_LIST
        SET COUPON_LIST_STATUS = 3
        WHERE COUPON_LIST_ID = (SELECT A.COUPON_LIST_STATUS
        FROM COUPON_LIST A
        INNER JOIN ORDERS B
        ON A.MEMBER_ID = B.MEMBER_ID
        WHERE COUPON_LIST_ID = #{couponListId})
    </update>

    <insert id="addPoint">
        <selectKey keyProperty="pointId" resultType="Long" order="BEFORE">
            SELECT SEQ_POINT_ID.NEXTVAL
            FROM DUAL
        </selectKey>
        INSERT INTO POINT(POINT_ID, MEMBER_ID, POINT_STACK, POINT_STACK_REASON, POINT_STACK_DATE, POINT_NOW)
        VALUES(#{pointId}, #{memberId}, #{pointStack}, #{pointStackReason}, SYSDATE, (SELECT
        POINT_NOW
        FROM
        (SELECT
        POINT_NOW,
        POINT_STACK_DATE,
        ROW_NUMBER() OVER (ORDER BY POINT_STACK_DATE DESC) AS rn
        FROM
        POINT
        WHERE
        MEMBER_ID = #{memberId})
        WHERE
        rn = 1) + #{pointStack})
    </insert>

    <select id="findOrdersByMemberIdAndCri" resultType="aug.laundry.dto.OrdersListResponseDto">
        SELECT ORDERS_DATE, ORDERS_STATUS, ORDERS_PICKUP, ORDERS_PICKUP_DATE, ORDERS_RETURN_DATE
        FROM(SELECT ROWNUM rn, t.*
        from(SELECT TO_CHAR(TO_NUMBER(TO_CHAR(ORDERS_DATE, 'MM'))) || '월 ' || TO_CHAR(ORDERS_DATE, 'DD') || '일' || TO_CHAR(ORDERS_DATE, '(DY)') AS ORDERS_DATE,
        ORDERS_STATUS, ORDERS_PICKUP, ORDERS_PICKUP_DATE, ORDERS_RETURN_DATE
        FROM ORDERS
        WHERE MEMBER_ID = #{memberId} AND ORDERS_STATUS NOT IN(1)
        ORDER BY ORDERS_DATE DESC) t)
        WHERE rn BETWEEN #{cri.startNo} and #{cri.endNo}
    </select>

    <select id="getTotalCount" resultType="int">
        SELECT COUNT(*)
        FROM ORDERS
        WHERE MEMBER_ID = #{memberId}AND ORDERS_STATUS NOT IN(1)
    </select>
</mapper>